spring.application.name=personas-clientes-service

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/bankingdb?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:zheing}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:Pa$$w0rd}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:none}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.open-in-view=false

# Server Configuration
server.error.include-message=always
server.error.include-binding-errors=always
server.port=${SERVER_PORT:8081}

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:192.168.100.26:9092}

# Producer Configuration - Sin transacciones para evitar conflicts
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.enable.idempotence=false
spring.kafka.producer.acks=1
spring.kafka.producer.retries=0
spring.kafka.producer.properties.max.in.flight.requests.per.connection=1
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.request.timeout.ms=30000
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.batch.size=16384
spring.kafka.producer.properties.compression.type=none

# Consumer Configuration - Optimizada
spring.kafka.consumer.group-id=personas-clientes-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false

# Listener Configuration - Optimizada para evitar bucles
spring.kafka.listener.ack-mode=manual_immediate
spring.kafka.listener.concurrency=1
spring.kafka.listener.poll-timeout=3000
spring.kafka.listener.missing-topics-fatal=false

# OpenAPI/Swagger Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.configUrl=/v3/api-docs/swagger-config
springdoc.swagger-ui.url=/v3/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.disable-swagger-default-url=true

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.db.enabled=true
management.health.diskspace.enabled=true

# Date Format Configuration
spring.jackson.date-format=dd/MM/yyyy
spring.jackson.time-zone=${TZ:America/Guayaquil}

# Logging Configuration - Optimized for production-like environment
logging.level.org.springframework=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.kafka=INFO
logging.level.com.wquimis.demo=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.apache.kafka=WARN
logging.level.org.springframework.kafka.listener=INFO

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000
